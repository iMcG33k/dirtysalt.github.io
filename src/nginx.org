#+title: nginx
http://nginx.org/

** Notes
*** 站点跳转
从dirlt.com跳转到dirtysalt.info
#+BEGIN_EXAMPLE
http {
    server_name dirlt.com;
    rewrite ^ $scheme://dirtysalt.info$request_uri? permanent;
}
#+END_EXAMPLE

这样访问dirlt.com时候，返回HTTP Permanent Redirect

#+BEGIN_EXAMPLE
➜~  curl -v -S dirlt.com
-* Rebuilt URL to: dirlt.com/
-*   Trying 139.162.32.139...
-* Connected to dirlt.com (127.0.0.1) port 80 (#0)
> GET / HTTP/1.1
> Host: dirlt.com
> User-Agent: curl/7.43.0
> Accept: */*
>
< HTTP/1.1 301 Moved Permanently
< Server: nginx/1.4.6 (Ubuntu)
< Date: Sat, 26 Mar 2016 02:25:22 GMT
< Content-Type: text/html
< Content-Length: 193
< Connection: keep-alive
< Location: http://dirtysalt.info/
<
<html>
<head><title>301 Moved Permanently</title></head>
<body bgcolor="white">
<center><h1>301 Moved Permanently</h1></center>
<hr><center>nginx/1.4.6 (Ubuntu)</center>
</body>
</html>
#+END_EXAMPLE

*** 支持软链接
#+BEGIN_EXAMPLE
http {
    disable_symlinks off;
}
#+END_EXAMPLE
*** 正向代理
用nginx做一个http proxy. `resolver*`这个字段是必要的。
#+BEGIN_EXAMPLE
server {
    resolver 8.8.8.8;
    resolver_timeout 5s;

    listen 0.0.0.0:64441;

    location / {
        proxy_pass $scheme://$http_host$request_uri;
        proxy_set_header Host $http_host;
        proxy_connect_timeout 5;
    }
}
#+END_EXAMPLE

然后来测试一下
#+BEGIN_EXAMPLE
In [10]: import requests

In [11]: r = requests.get('http://www.baidu.com', **{'proxies': {'http': 'http://127.0.0.1:64441'}})

In [12]: r
Out[12]: <Response [200]>
#+END_EXAMPLE

*** 请求缓存
可以针对某个路径下面的请求进行缓存。不过我还没有搞清楚缓存规则是怎么样的，默认应该是对query做key.

#+BEGIN_EXAMPLE
proxy_cache_path /root/ngx-cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=1d;
server {
  listen 80;
  server_name dirlt.com;
  location / {
      proxy_pass http://127.0.0.1:9000;
  }
  location /download/ {
      proxy_cache my_cache;
      proxy_pass http://127.0.0.1:9000;
  }
}
#+END_EXAMPLE
